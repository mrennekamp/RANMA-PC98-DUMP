=======================================================================
        ＥＭＵＭＢ　ＭＳ−ＤＯＳ５.０対応　擬似ＵＭＢドライバ

    Copyright (C) 1992, Tomonori.Watanabe -- Tom_W , NIFTY GCD02235
-----------------------------------------------------------------------
  VERSION 1.0  1992/03/21  first relese version (誤字脱字は許して！）
  VERSION 1.1  1992/03/29  set401.sys 追加 と emumb.docの誤記修正
                           (GRAM->GVRAMなどわかりにくい点や追加仕様）
                           emumb.sysに/Eオプション追加
                           semumb.comに/?オプション追加
                           himem.SYSなしで動作するemumbx.sys追加
  VERSION 1.2  1992/05/04  NEC製DOS5で/Eｵﾌﾟｼｮﾝを使用しないとﾊﾝｸﾞｱｯﾌﾟ
                           する不良を対策
                           /Aと/Eの二重指定にたいするﾁｪｯｸ強化
                           emumb.docの改定（最新情報反映）
                           emumb.asmをemumbx.asmに統合しました
  VERSION 1.3  1992/06/02  setumb.comをsetumb.exeにしてdevice機能追加
                           set401.sys,emumb**.sysの非常駐終了方法変更
                           setumb.exeのGVRAMｶﾞｰﾄﾞ機能強化
  VERSION 1.3a 1992/12/12  某氏よりアップ依頼があり、お蔵入りしていた
                           本バージョンに化粧直しをして公開
-----------------------------------------------------------------------
警告：前バージョンご利用の方へ
      ~~~~~~~~~~~~~~~~~~~~~~~~
　V1.3から、setumbが.comから.exeに変更しています。MS-DOSでは、.EXEより
　.comが優先されてしまいますので、必ず、以前のsetumb.comを削除してから
　ご利用願います。
=======================================================================

１．はじめに（読み飛ばしてもらっても結構です）

　　ＥＰＳＯＮからも、ＭＳ−ＤＯＳ５．０が発売され、早々に購入して使って
　いましたが、製品に付属のEMM386.EXEは、仮想８６モードを使っており、拡張
　メモリにウエイトが挿入されている PC-386noteA（以下"のてＡ"と略）では、
　思った以上に遅くなってしまいました。そこで、ハードウエアＥＭＳドライバ
　（IOS-10mini）を使っていましたが、ＤＯＳ５対応でないため、ＵＭＢを通常
　のDEVICEHIGHで使えないなどの問題がありました。
　　また、ｗｉｎｄｏｗｓもｄｏｓｓｈｅｌｌも使っていないためＧＶＲＡＭが
　使われないままになっており、もったいないとも感じていました。

　　そうこうしているうちに、NIFTY FEPSONフォーラムで、DARK_UMBなるものが
　あることを知り、早速、ダウンロードして使わせていただきました。その説明
　の中で、のてＡのD400-D6FFとD800-DFFFが、実はＲＡＭであることを知りまし
　た。実は、私も以前からＲＯＭの解析を行っており、D400-D6FFとD800-D8FFを
　ＢＩＯＳで使用していて、一部ＲＡＭになっていることは知っていたのですが
　0FFHで埋め尽くされていたために、全部がＲＡＭではないと思い込み、バンク
　切り替えのＩ／Ｏポートを探していたのでした。感謝＞Apple2さん
  ______________________________________________________________________ 
 |　尚、当然のことですが、のてＡのＲＡＭ領域などの非公開情報をＥＰＳＯＮ|
 |に直接問い合わせることは、絶対にしないで下さい。あくまでも、趣味の領域|
 |とご理解下さい。                                                      |
  ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ 
　　このような背景で、Ａ０００以降に実在するＲＡＭをＤＯＳ５のＵＭＢとし
　て認識させるためのデバイスドライバ［ＥＭＵＭＢ］を作成しました。

    のてＡ以外の機種でも使えますので、活用してみて下さい。
    実際に、Ｖ３０マシン（ＰＣ−９８０１ＶＭ）でもＤＯＳ５のＵＭＢが使え
  ます。（私が使っています！）

　　また、このパッケージには、ＤＯＳ５のＵＭＢを解析中に作成した、ＵＭＢ
　制御ツール［ｓｅｔｕｍｂ］も入れてありますので使って下さい。

   ＜＜＜EMM386.EXEのＵＭＢ機能との共存も出来るようになりました。＞＞＞
   ＜＜＜HIMEM.SYS自体をＵＭＢに配置することも出来ます！　　　　 ＞＞＞


２．ファイルの説明
　　MAKEFILE ･･････････････････ ＴＡＳＭ（ＢＣ＋＋）用のmakefile
    EMUMBX.ASM ････････････････ 擬似ＵＭＢドライバ・統合版ソース
    EMUMB.SYS ･････････････････ HIMEM.SYS利用 擬似ＵＭＢドライバ
    EMUMBX.SYS ････････････････ HIMEM.SYS不要 擬似ＵＭＢドライバ
    EMUMB386.SYS ･･････････････ HIMEM.SYS不要 擬似ＵＭＢドライバ（３８６用）
    SETUMB.ASM ････････････････ ＤＯＳ５用ＵＭＢ制御ツール／ドライバ・ソース
    SETUMB.EXE ････････････････ ＤＯＳ５用ＵＭＢ制御ツール／ドライバ実行形式
    SET401.ASM ････････････････ ＥＭＭサイズ設定ドライバ・ソース
    SET401.SYS ････････････････ ＥＭＭサイズ設定ドライバ

　アセンブルには、ＢＣ＋＋２．０のＴＡＳＭ、ＴＬＩＮＫを使用しました。
　また、EMUMB386.SYS以外は、８０１８６の命令のみ使っていますので、Ｖ３０や
　８０１８６以降のＣＰＵを搭載するマシンで動作します。尚、emumb386.sysは、
　１バイトでもメモリを増やす為に８０３８６の命令を使っています。


３．ＥＭＵＭＢの使い方（基本的にはＥＭＵＭＢＸの方をご利用下さい）
　　ＤＯＳ５のCONFIG.SYSに以下の順番で登録して下さい。
     |
     |DOS = LOW,UMB
     |    または
     |DOS = HIGH,UMB
     |  :
     |DEVICE = ...\EMM4JE.SYS /E=0A0:7FF ...  /* ハードウエアＥＭＳなど */
     |DEVICE = ...\HIMEM.SYS                  /* ＸＭＳドライバ         */
     |  :
     |DEVICE = ...\EMUMB.SYS ...              /* 擬似ＵＭＢドライバ     */
     |  :
     |DEVICEHIGH = ....                       /* ＵＭＢが使える         */

　　EMUMB.SYSのオプションは、次のEMUMBX.SYSと同じです。
　　基本的には、EMUMBX.SYSの方をお薦めします。このEMUMB.SYSは、ＤＯＳ５の
　仕様変更などでHIMEM.SYSとの共存が出来なくなった場合などにお使い下さい。


４．ＥＭＵＭＢＸの使い方
　　ＤＯＳ５のCONFIG.SYSに以下の順番で登録して下さい。
     |
     |DOS = LOW,UMB
     |    または
     |DOS = HIGH,UMB
     |  :
     |DEVICE = ...\EMUMBX.SYS ...             /* 擬似ＵＭＢ＆ＸＭＳﾄﾞﾗｲﾊﾞ  */
     |    または
     |DEVICE = ...\EMUMB386.SYS ...           /* 80386以上のCPU対応        */
     |  :
     |DEVICEHIGH = ....                       /* ＵＭＢが使える            */
                                              /* HIMEM.SYSやEMM386.EXEもOK */

　　EMUMBX.SYS(EMUMB386.SYS)のオプションは、以下の通り。

      /G ･････････････ E000〜E7FFのＧＶＲＡＭをＵＭＢとして使う為に１６色
                       グラフィックモードに設定する。
                       他のオプションより前に設定すること。

      /Mssss-eeee ････ 指定した範囲（ssss／eeee：開始／終了パラグラフ）
                       のメモリをＵＭＢとして登録する。
                       メモリのチェックを行わないため慎重に指定すること。
                       実メモリのない領域を指定すると破滅する。

      /Assss-eeee ････ 指定した範囲の先頭（約15パラグラフ分）にドライバ
                       を移して常駐させ、残った部分を/Mオプションと同様
                       に扱うことで、ＴＰＡをほんの少し拡大する。

      /Essss-eeee ････ EMM386.EXEのＵＭＢ機能やHIMEM.SYSのＸＭＳ機能と
                       共存するために、ＵＭＢをＤＯＳ５に渡し終えた後で
                       ＵＭＢ＆ＸＭＳの機能を停止する。（ＸＭＳとしての
                       ＵＭＢ解放が出来なくなるがＤＯＳ５では使用しない
                       ので問題ない。）解放関数自体が常駐しない為、常駐
                       量は約11パラグラフです。あとは、/A(/M)と同じです。
                                               ~~~~~~~~~~~~~~~~~~~~~~~~~
                       ＵＭＢ開放機能が常駐しない分、ＵＭＢが増加する。
                       また、EMM386.EXEと共存する場合は、EMM386.EXEの/E
                       オプションなどでEMUMB386.SYSで実現する偽装ＵＭＢ
                       領域と重ならない様に注意しなければならない。
  ［注意］
  　　EMUMB.SYSでは、EMM386.EXEと共存する為には、/Eオプションを指定して、
  　HIMEM.SYSより後に登録します。
  　　EMUMBX.SYS(EMUMB386.SYS)では、HIMEM.SYSやEMM386.EXEと共存する為には
  　/Eオプションを指定して、HIMEM.SYSより前に登録します。
      /M,/A,/Eで指定するメモリ領域が重ならないように設定して下さい。
      また、/A,/Eオプションは、どちらか一方を指定して下さい。二重に指定す
    ると後のオプションを/Mとして処理します。

  ［備考］
  　　EMUMB.SYSでは、HIMEM.SYSの持つＸＭＳ用ＡＰＩにパッチを当ててＵＭＢ
  　機能を提供しますが、EMUMBX.SYSでは、ＸＭＳ用ＡＰＩ自体も提供している
  　ためHIMEM.SYSなしでもＵＭＢが実現できます。
  　　また、ＤＯＳ５では、CONFIG.SYSの各DEVICE文毎にＸＭＳ用ＡＰＩを確保
  　しにくる様なので、EMUMBX.SYS(EMUMB386.SYS)に/Eオプションを付加して、
  　HIMEM.SYSやEMM386.EXEを後からDEVICEHIGH文でＵＭＢに登録して、ＵＭＢを
  　追加したりできる様です。
　　　この辺は、ＤＯＳ５の仕様が違ったり、変更されたりしたら使えません。
　　　あと、のてＡのユーザにとっては、HIMEM.SYSを後から登録すると/Eを使っ
　　たEMUMB386.SYSが完全にＤＯＳ５から切り離されるため、レジュームで破壊
　　される領域にも常駐させることができ、約160バイトＵＭＢが増加する。

  ［設定例］
    ・ＧＲＡＭをＵＭＢとして使う場合の設定（V30や80286を使ったマシン）
       DEVICE = ...\EMUMBX.SYS /G /Ma800-bfff /Ee000-e7ff

    ・のてＡでグラフィックを使う場合の標準設定（レジュームを使用しない）
       DEVICE = ...\EMUMB386.SYS /Ed500-d6bf /Md900-dfff

    ・のてＡでグラフィックを使う場合の標準設定（レジュームを使用する）
       DEVICE = ...\EMUMB386.SYS /Ed500-d511 /Ad900-dfff

    ・のてＡでＧＶＲＡＭを利用して大きなドライバでもＵＭＢを使う場合
       DEVICE = ...\EMUMB386.SYS /G /Ed500-d511 /Md900-e7ff
      ※ AUTOEXEC.BAT中で"SETUMB /G0"を実行することで、グラフィックが使
       　える可能性がある。(EPSON版に付属のWXA6.SYSは、この機能を使って
       　ＵＭＢに置くことができる。）

    ・HIMEM.SYSをＵＭＢに置く場合（但しWIN3.0Aの386ｴﾝﾊﾝｽﾓｰﾄﾞでは不可）
      +---------------------------------------+
      |DOS = HIGH,UMB                         |
      |DEVICE = ...\EMUMB386.SYS /Exxxx-....  | 擬似ＵＭＢ＆ＸＭＳﾄﾞﾗｲﾊﾞ
      |DEVICEHIGH = ...\HIMEM.SYS             | ＵＭＢにHIMEM.SYSが入る
      |   :                                   |
      +---------------------------------------+


５．ＳＥＴＵＭＢの使い方
 ＊ユーティリティ・モード
　　このコマンドは、ＤＯＳ５で追加されたファンクション（５８Ｈ）を利用し
　て、ＤＯＳ５でのＵＭＢの割り当て方式を制御するものです。
　　また、おまけとして、ＥＭＵＭＢで確保したＧＶＲＡＭ(E000〜E7FF)が幸運
　にも未使用であった場合に、システム領域としてロックする機能もあります。
　この機能により、通常のＵＭＢ領域だけでは作業領域が不足してＵＭＢに組み
　込めない様なドライバも組み込んだ上で、グラフィックを使うことも可能です。

　　SETUMB.COMは、オプションを付けずに起動すると現在の設定内容を表示する。
　また、設定の変更などは、以下のオプションで指定する。

      /Axy ･･･････････ メモリ割り当てストラテジを１６進２桁(xy)で指定す
                       る。［ファンクション・コール：05801H］
                           x = 0 ---- 通常メモリ→ＵＭＢの順に割り当てる
                           x = 8 ---- ＵＭＢ→通常メモリの順に割り当てる
                           x = 4,C -- ＵＭＢからのみ割り当てる。　但し、
                                      ＵＭＢの空き容量が少ないとＤＯＳ５
                                      がハングアップするので注意する。
                           y = 0 ---- メモリの下位から割り当てる
                           y = 1 ---- 最少の空きブロックから割り当てる
                           y = 2 ---- メモリの上位から割り当てる

      /U0 ････････････ ＵＭＢのリンクを解除する。（/Aのxが無効になる）
    　                 ［ファンクション・コール：05803H］

      /U1 ････････････ ＵＭＢを通常メモリにリンクする。

      /Gz ････････････ ＥＭＵＭＢで確保したＧＶＲＡＭ(E000〜E7FF)が未使用
                       であればシステム領域としてロックし、使用不可にする。
                       （DFFF〜DFFFもＵＭＢとして未使用でなければならない）
                           z = 0 ---- ロック成功後、８色モードにする
                           z = 1 ---- ロック成功後、１６色モードにする

      /? ･････････････ ＤＯＳ風のヘルプメッセージを表示する。

  ［使用例］
  　・現在の設定内容を表示する
       SETUMB

    ・ＵＭＢもフリーメモリとして利用する
       SETUMB /U1 /A00

    ・ＥＭＵＭＢで確保したＧＶＲＡＭ上のＵＭＢをロックする
       SETUMB /G0

 ＊デバイス・モード
　　SETUMB.EXEをCONFIG.SYSのDEVICE文で登録すると、ＧＶＲＡＭのロック機能を
　実行します。デバイスの組み込みで、不用意にＧＶＲＡＭを使用したくない場合
　に指定して下さい。（現バージョンは、オプション指定を無視して、/G0 が指定
　されたものとして処理します。）

  ［使用例］
      +---------------------------------------+
      |DOS = HIGH,UMB                         |
      |DEVICE = ...\EMUMB386.SYS /G /Exxxx-...| 擬似ＵＭＢ＆ＸＭＳﾄﾞﾗｲﾊﾞ
      |   :                                   |
      |DEVICE = ...\SETUMB.EXE                | emumbの/Gで確保したGVRAM領域が
      |   :                                   | 使用されていなければロックする
      +---------------------------------------+


６．ＳＥＴ４０１の目的とその使い方（特に旧ＰＣ−２８６ユーザさんへ）
　　このデバイスドライバは、その名の通り、拡張メモリのサイズがあるＢＩＯＳ
　の作業領域[0000:0401H]の内容を変更するためのもので、決して常駐しません。
                                                      ~~~~~~~~~~~~~~~~~~  
　ＤＯＳ５では、IO.SYSの初期化時にこの番地の内容を作業領域にコピーしておき、
　INT 0DCHの拡張ファンクションで返す仕様になっています。一方、HIMEM.SYSを
　使用すると、[0000:0401H]の内容とINT 0DCHで返される値を比較しての小さい方
　の値を用いてＸＭＳを初期化し、[0000:0401H]の値を０にして、他のプログラム
　で使用できない様にガードしてしまいます。しかし、ＤＯＳ５付属の MEM.EXEで
  は、INT 0DCHを使って本来のメモリ容量を表示しています。そこで、このIO.SYS
  の作業領域にある拡張メモリサイズを変更する機能も追加しました。

  　これで、旧ＰＣ−２８６シリーズなどの拡張メモリ容量[0000:0401H]が設定され
  ないマシンも救う事が出来ます。

　　また、ＤＯＳ５作業領域内の拡張メモリサイズからハードウエアＥＭＳが使う分
　だけ除いて置くことで精神的安定（？）を得られます。（きっとＷＩＮ３でＥＭＳ
　として使用している拡張メモリ領域をＥＭＢとして使われてしまうこともなくなる
　はずです。）
　　尚、のてＡでは認識されない８ＭＢ拡張メモリも、この機能を使うと認識される
　様になるようです。（私は４ＭＢのボードしかないので確認していませんが）

　　使い方は簡単で、CONFIG.SYSにDEVICE文で何回でも登録出来ます。オプションは
　以下の６通りで、前から順に実行するので、組み合わせて使用出来ます。

      /I=xx ･･････････ 指定した値を[0000:0401H]に設定する。
      /I+xx ･･････････ 指定した値を[0000:0401H]に加算する。
      /I-xx ･･････････ [0000:0401H]から指定した値を減算する。
      /D=xx ･･････････ ＤＯＳ５の作業領域を更新することを除き、/Iと同じ。
      /D+xx ･･････････                     〃
      /D-xx ･･････････                     〃
         xx ---------- 128KB単位の拡張メモリ量を示す16進数2桁の値。
                       値の正当性はチェックしないので、慎重に設定すること。
                       間違えるとＥＭＳを破壊したり、暴走したりする。


７．技術的な話題（勘違いもあるかも知れません！ ご勘弁を...）
 ＊ＸＭＳ
　　　ＤＯＳ５に付属のHIMEM.SYSでは、ＸＭＳのＨＭＡとＥＭＢをサポートして
　　おり、ＢＣ＋＋などのＥＭＢを使用するプログラムも動作しますが、市販の
　　メモリ関連ドライバのＸＭＳ機能では、ＨＭＡしかサポートしていないもの
　　が多く、SMARTDRVなども動作しません。（最近、ＤＯＳ５対応も出てきてい
　　ますが....）

 ＊ＥＭＢの表示
　　　ＤＯＳ５では、ｍｅｍコマンドでＵＭＢやＥＭＢのサイズなどを表示でき
　　すが、ＦＥＭＳ(V0.31)を使った場合などに表示されないことがあります。
　　　理由は、拡張メモリの実サイズをIO.SYSの初期化時に0000:0401Hから読み
　　出してIO.SYS内部に格納しておき、INT 0DCHの拡張コマンドで読み出したり
　　割り当てたりしている為です。
　　　ＥＰＳＯＮのＤＯＳ５では0060:0031Hに値が格納されますので、ダミーの
　　デバイス・ドライバなどを作って、HIMEM.SYSなどを組み込む前に、正しい
　　値（128KB単位のメモリ面数）を設定しておけば、正しく動作します。（N*C
　　製のＤＯＳ５でも同じです）
　　　このパッケージに追加したSET401.SYSの/Dオプションでも可能です。

 ＊CONFIG.SYSのINSTALL
　　　ＤＯＳ５では、CONFIG.SYSにINSTALLでTSRをロード出来ますが、DEVICE文
　　より前に書いても最後に実行されますし、ＵＭＢも使用出来ません。
　　　しかも、常駐しないコマンドを記述すると"CONFIG.SYSに誤りがあります"
　　などと訳のわからんメッセージを出してしまいます。
　　　しかし、このエラー・メッセージさえ無視してしまえば、INSTALL文で前の
　　SETUMBコマンドを使ってTSRをＵＭＢに置くことが出来るばかりか、command.
    comまでＵＭＢにいってしまいます。こうなると、DOS=HIGHなどを駆使して、
    ６００〜６１５ＫＢのフリーエリアも夢ではありません。しかも、TSRを常駐
    させた状態で！
　　　但し、デバイス・ドライバでＤＯＳ５の内部テーブルを書き換えるなど、
　　色々やってみましたが、ＩＯバッファやＦＣＢをＵＭＢに移すことはかなり
　　難しそうです。（どうしてもエリアができてしまいます）

 ＊CONFIG.SYSのDOS=HIGHやDOS=UMBの位置
　　　CONFIG.SYSの中では、INSTALLのところでも述べた様に、順番はあまり関係
　　ありません。見易い様に書けば良い様です。

 ＊DOS=UMBとした場合、DOS5は、いつUMBを確保するの？
　　　DEVICE文でドライバを組み込む毎にＸＭＳ機能を呼び出して、全てのＵＭＢ
　　を確保し続ける様です。このため、ＸＭＳ機能を持つEMM386.EXEやHIMEM.SYS
　　と偽装ＸＭＳ機能を持つEMUMBX.SYS(EMUMB386.SYS)のＵＭＢが共存できるので
　　す。

 ＊AUTOEXEC.BAT内のLHコマンドでＵＭＢにＴＳＲを組み込む場合の注意
　　　AUTOEXEC.BAT内のLHコマンドでＵＭＢにＴＳＲを組み込む場合、環境変数を
　　定義する前に実行した方がＵＭＢの利用効率が上がります。
　　これは、LHコマンドを使用すると環境変数領域もＵＭＢに格納されるためで、
　　環境変数を参照しないＴＳＲでは、無駄になってしまいます。
　　但し、環境変数を参照する様なＴＳＲは、最低限の環境変数を設定した時点で
　　組み込みます。
　　　せこいようですが、ＵＭＢが狭いため、１バイトも無駄には出来ません。
　　　教訓：１バイトを笑う者は、１バイトに泣く！　（ちょっとオーバー）

 ＊仮想ＥＭＳとハードウエアＥＭＳ
　　　仮想８６モードが遅いと書きましたが、全体的な話しで、ことＥＭＳのアク
　　セスに関しては、ハードウエアＥＭＳより高速です。
　　　これは、仮想ＥＭＳが、本来はＥＭＢにあるメモリ領域を３８６のメモリ管
　　理機能を使って仮想的にマッピングしているのに対して、ハードウエアＥＭＳ
　　では、物理的にＲＯＭ領域にメモリをマッピングしているため、ハードウエア
　　ＥＭＳのアクセスでハードがＲＯＭアクセスと思い、ウエイトを追加する為で
　　す。一方、ハード的にＲＡＭ領域をアクセスする仮想ＥＭＳは、ＲＯＭとして
　　のウエイトが無いぶん、高速になります。
　　　ただ、仮想８６モードでは、Ｉ／Ｏアクセスや割り込みの度にEMM386.EXEに
　　制御が移って処理するのと、のてＡでは、ＥＭＢのアクセス自体にウエイトが
　　入っていることなどから、仮想ＥＭＳの方が全体的に遅くなってしまいます。

 ＊のてＡのＵＭＢについて（次のバージョンのドキュメントからは削除予定です）
　　のてＡでは、d400-dfffがシステム領域となっており、ＵＭＢの割り当てる際に
　謎が多く、試行錯誤で調べなければなりません。この辺の話題は、ＮＩＦＴＹ−
　ＦＥＰＳＯＮのＮＯＴＥ＆ＢＯＯＫの部屋で活発な議論が行われています。
　　詳しくは、会議室での議論に譲るとして、ここでは、現在までに私が知っている
　ことをまとめて紹介します。（但し、製番による違いがあるかも知れません。）
      d400-d4ff ： HDDの512<->256ﾊﾞｲﾄ/ｾｸﾀ変換ﾊﾞｯﾌｧやBIOS作業領域がある
      d500-d6ff ： 裏ROMでｽﾀｯｸ領域として使用しており、ﾚｼﾞｭｰﾑ時に初期化される
      d700-d7ff ： HDDのBIOS-ROM(裏ROMのff00-ffffと同じため、d7ff:0000にJMP
                   命令[ﾘｾｯﾄ用]がある)
      d800-d8ff ： 裏ROMの作業領域とｽﾀｯｸ領域がある。(ﾚｼﾞｭｰﾑ専用かは未確認)
                   ﾚｼﾞｭｰﾑ時に初期化される。
      d900-dfff ： 空きRAM領域。いままでのところ、ROMで使用している所を発見
                   出来ていない為、ほぼ、空き領域と推定している。
                   ﾚｼﾞｭｰﾑ時にも初期化されない。
      f800-ffff ： あるIOﾎﾟｰﾄを操作すると裏ROMに切り替わる。(おまけ！)

　　また、d800-dfffがＲＡＭであることから、EMM4JEなどのハードウエアＥＭＳで
　D8やDCをEMSｳｲﾝﾄﾞｳに指定するとﾒﾓﾘの読みだしﾃﾞｰﾀがﾊﾞｽ上で競合して、あぶない
　状態になってしまいそうです。（他ののてにも同じ問題があるかと思います）
　　教訓：のてＡではEMM4JE.SYSの/W=...,D4,D8,DCは、絶対に指定してはならない。
                                       ~~~~~~~~
　　ちなみに、のてＡの実ＵＭＢ（d400〜）は、ウエイトが入っていないらしく、
　コンベンショナル・メモリ（0000〜）と同じ性能が期待できます。（えらい！）


８．再配布など
　　本パッケージ内の全てにおいて、著作権は、私、渡辺友範が保有します。
　本プログラムの開発に当たっては、FEMS.SYS(ＡＣlab.さん作)やDARK_UMB(Apple2
　さん作) などの数々のソフトウェアを使用させていただきました。また、NIFTY
　内の各フォーラムでは、様々な情報を本プログラムのアイデアとして、流用させ
　ていただきました。
　　このような環境に恵まれたことを感謝し、その恩返しの意味も込めて、本ソフト
　ウエアを”フリーウエア”として、個人的利用に限り、無償で公開するものです。
　　尚、転載などは、各ネットワークやフォーラム個々の規定に従えば自由ですが、
　パッケージの内容を変更しないことや、バージョン・アップ版配布時に転載先へ
　反映することなど、責任を持って対応願います。


９．雑談
　　うわさによると、SET401.SYSで１６Ｍｂ以上のメモリを使用できるそうで．．．
　このため、SET401.SYSだけ別パッケージとして公開しました。ただ、本パッケージ
　のものと全く同じものなので、二重にダウンロードしないでね(^^;

　あと、今後の機能拡張の予定はありませんが、簡単に出来ることならばご要望には
　お答えします。
　プログラムではなく”物語”に魅力を感じ始めていますので保証できませんが(^^;

１０．ご意見など
　　ご意見、ご要望などありましたら、NIFTY FEPSONSの"豊かな連載の部屋"(^^;か
　"ﾌﾘｰｿﾌﾄｳｴｱ"会議室、または私宛のメールにて連絡下さい。出来る限り、対応して
　いきたいと思います。
　　但し、週末以外はまともにアクセスできない為、レスポンスが遅れることがあり
　ますが、ご容赦願います。

----------------------------------------------------------------------------
    最近”ダンディ・キット”と自称しているTom_W ( NIFTY-Serve GCD02235 )
